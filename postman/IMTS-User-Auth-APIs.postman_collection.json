{
	"info": {
		"_postman_id": "a1b2c3d4-e5f6-7890-abcd-ef1234567890",
		"name": "IMTS Task Management - User & Auth APIs",
		"description": "Complete collection for User Authentication and User Management APIs",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@company.com\",\n    \"password\": \"Password123\",\n    \"phone\": \"1234567890\",\n    \"role\": \"worker\",\n    \"departmentId\": \"{{departmentId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user in the system"
					},
					"response": [
						{
							"name": "Success Response",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"name\": \"John Doe\",\n    \"email\": \"john.doe@company.com\",\n    \"password\": \"Password123\",\n    \"phone\": \"1234567890\",\n    \"role\": \"worker\",\n    \"departmentId\": \"65f1b2c3d4e5f67890abcdef\"\n}"
								},
								"url": {
									"raw": "{{baseUrl}}/api/auth/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"auth",
										"register"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n    \"success\": true,\n    \"message\": \"User registered successfully\",\n    \"data\": {\n        \"user\": {\n            \"_id\": \"65f1b2c3d4e5f67890abcdef\",\n            \"name\": \"John Doe\",\n            \"email\": \"john.doe@company.com\",\n            \"phone\": \"1234567890\",\n            \"role\": \"worker\",\n            \"department\": {\n                \"_id\": \"65f1b2c3d4e5f67890abcdef\",\n                \"name\": \"IT Department\"\n            },\n            \"isActive\": true,\n            \"createdAt\": \"2024-01-15T10:30:00.000Z\"\n        },\n        \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\",\n        \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...\"\n    }\n}"
						}
					]
				},
				{
					"name": "Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.data.token);",
									"    pm.environment.set('refreshToken', response.data.refreshToken);",
									"    pm.environment.set('userId', response.data.user._id);",
									"    console.log('Token saved to environment');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"john.doe@company.com\",\n    \"password\": \"Password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with email and password"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"profile"
							]
						},
						"description": "Get current user's profile information"
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe Updated\",\n    \"phone\": \"9876543210\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/profile",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"profile"
							]
						},
						"description": "Update user profile (name and phone only)"
					},
					"response": []
				},
				{
					"name": "Change Password",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"currentPassword\": \"Password123\",\n    \"newPassword\": \"NewPassword123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/change-password",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"change-password"
							]
						},
						"description": "Change user password"
					},
					"response": []
				},
				{
					"name": "Refresh Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('authToken', response.data.token);",
									"    pm.environment.set('refreshToken', response.data.refreshToken);",
									"    console.log('New tokens saved to environment');",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/refresh-token",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"refresh-token"
							]
						},
						"description": "Refresh access token using refresh token"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"refreshToken\": \"{{refreshToken}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout from current device"
					},
					"response": []
				},
				{
					"name": "Logout All Devices",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/auth/logout-all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"auth",
								"logout-all"
							]
						},
						"description": "Logout from all devices"
					},
					"response": []
				}
			],
			"description": "User authentication endpoints"
		},
		{
			"name": "User Management",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users?page=1&limit=10&role=worker&search=john",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"description": "Page number (optional)"
								},
								{
									"key": "limit",
									"value": "10",
									"description": "Number of users per page (optional)"
								},
								{
									"key": "role",
									"value": "worker",
									"description": "Filter by role (optional)",
									"disabled": true
								},
								{
									"key": "search",
									"value": "john",
									"description": "Search in name or email (optional)",
									"disabled": true
								},
								{
									"key": "department",
									"value": "{{departmentId}}",
									"description": "Filter by department (optional)",
									"disabled": true
								},
								{
									"key": "isActive",
									"value": "true",
									"description": "Filter by active status (optional)",
									"disabled": true
								}
							]
						},
						"description": "Get all users with filtering, searching and pagination"
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}"
							]
						},
						"description": "Get specific user by ID"
					},
					"response": []
				},
				{
					"name": "Get Workers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/workers?departmentId={{departmentId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"workers"
							],
							"query": [
								{
									"key": "departmentId",
									"value": "{{departmentId}}",
									"description": "Filter workers by department (optional)",
									"disabled": true
								}
							]
						},
						"description": "Get all workers for task assignment (Giver/HOD only)"
					},
					"response": []
				},
				{
					"name": "Get Task Givers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/givers",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"givers"
							]
						},
						"description": "Get all task givers (users with giver or hod role)"
					},
					"response": []
				},
				{
					"name": "Get User Statistics",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/stats",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"stats"
							]
						},
						"description": "Get user statistics (count by role, active/inactive, etc.)"
					},
					"response": []
				},
				{
					"name": "Update User Role (HOD Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"role\": \"giver\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}/role",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"role"
							]
						},
						"description": "Update user role (HOD only). Roles: worker, giver, hod, observer"
					},
					"response": []
				},
				{
					"name": "Toggle User Status (HOD Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}/status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"status"
							]
						},
						"description": "Activate/Deactivate user account (HOD only)"
					},
					"response": []
				},
				{
					"name": "Transfer User to Department (HOD Only)",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							},
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"departmentId\": \"{{departmentId}}\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/api/users/{{userId}}/transfer",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"api",
								"users",
								"{{userId}}",
								"transfer"
							]
						},
						"description": "Transfer user to different department (HOD only)"
					},
					"response": []
				}
			],
			"description": "User management endpoints"
		},
		{
			"name": "Health Check",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/health",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"health"
					]
				},
				"description": "Check if server is running"
			},
			"response": []
		},
		{
			"name": "API Documentation",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/api",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"api"
					]
				},
				"description": "Get API documentation and available endpoints"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:5000",
			"type": "string"
		},
		{
			"key": "authToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "refreshToken",
			"value": "",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "departmentId",
			"value": "",
			"type": "string"
		}
	]
}
